trigger:
- master

variables:
- name: buildConfiguration
  value: Release
- group: WebApp-conf
  
stages:
- stage: Build
  jobs:
  - job: Build 
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '**/*UnitTests/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output "$(build.artifactstagingdirectory)"'
        zipAfterPublish: True

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'Website'
        publishLocation: 'Container'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)/ArmTemplates'
        ArtifactName: 'Templates'
        publishLocation: 'Container'       

- stage: Release_Infrastructure_to_Azure
  dependsOn: Build
  jobs:
  - job: Release_Infrastructure_to_Azure
    pool: 
     vmimage: 'windows-latest'
    steps:
    - checkout: none

    - download: current
      artifact: Templates
    
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'azure-sre-rg'
        subscriptionId: '16169bdf-109c-4eb7-9963-3d01e2352774'
        action: 'Create Or Update Resource Group'
        resourceGroupName: 'SREwithAzure-ADOYAML'
        location: 'West Europe'
        templateLocation: 'Linked artifact'
        csmFile: '$(Pipeline.Workspace)\**\*.json'
        overrideParameters: '-webAppName $(AZURE_WEBAPP_NAME) -hostingPlanName $(HOSTINGPLANNAME) -appInsightsLocation $(APPINSIGHTLOCATION) -sku "$(SKU)"'
        deploymentMode: 'Incremental'

- stage: Publish_Website_to_WebApp
  dependsOn: Release_Infrastructure_to_Azure
  jobs: 
  - deployment: VMDeployment
    displayName: "Publish Website to Azure App Service"
    environment:
      name: "Prod-WebApp"
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: none

          - download: current
            artifact: Website

          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'azure-sre-rg'
              appType: 'webApp'
              WebAppName: '$(AZURE_WEBAPP_NAME)'
              packageForLinux: '$**/*.zip'

- stage: Functional_Tests
  dependsOn:  Publish_Website_to_WebApp
  jobs:
  - job: Functional_Tests
    pool:
      vmImage: 'windows-latest'
    steps:
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            cd Application\aspnet-core-dotnet-core.FunctionalTests
            [xml]$runSetting = Get-Content functionalTests.runsettings
            $runSetting.RunSettings.TestRunParameters.ChildNodes.Item(0).value = 'https://$(AZURE_WEBAPP_NAME).azurewebsites.net/'
            $runSetting.Save("$(pwd)/functionalTests.runsettings")
      - task: DotNetCoreCLI@2
        inputs:
          command: 'test'
          projects: '$(System.DefaultWorkingDirectory)/Application/aspnet-core-dotnet-core.FunctionalTests'
          arguments: '-s functionalTests.runsettings'